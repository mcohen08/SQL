# For this project, I downloaded Spotify data from Kaggle, created a table to insert Spotify data into, and performed some analytics on the data using SQLite

CREATE TABLE BreakIntoTech_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--What are many distinct artists are there in this Top 50 list?
SELECT count(distinct artist_name) FROM BreakIntoTech_DB.Spotifydata;

-- What is the avg popularity, danceability, and energy by artist and track?
SELECT artist_name ,track_name ,avg(popularity) ,avg(danceability) ,avg(energy) FROM BreakIntoTech_DB.Spotifydata
GROUP BY artist_name, track_name;

--who are the Top 10 artists are by popularity?
SELECT artist_name, avg(popularity) FROM BreakIntoTech_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg(popularity) DESC
LIMIT 10;

--Calculate the average popularity for the artists in the Spotify data table. And for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”. (CTE practice)
WITH popularity_average_CTE AS (SELECT artist_name, AVG(popularity) AS average_popularity FROM SpotifyData
GROUP BY artist_name)
SELECT  artist_name, average_popularity,
'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity >=90;
